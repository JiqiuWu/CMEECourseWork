plot(0:10, 0:10, type = "n", asp = 1)
fern_2(c(5,0),pi/2,1)
fern_2(c(5,0),pi/2,1.1)
fern_2 <- function(start_position,direction,length,dir =-1 ){
dir <- dir*(-1)
if (length > 0.01) {
#a = Inf
#for (i in 1:a){
turtle(start_position, direction, length)
end_position = c(start_position[1] + length * cos(direction), start_position[2] + length * sin(direction))
fern_2(end_position, direction + (dir) * pi/4, 0.38*length,-dir)
fern_2(end_position, direction , 0.87*length,dir)
#}
}
}
graphics.off()
plot(0:10, 0:10, type = "n", asp = 1)
fern_2(c(5,0),pi/2,1.5)
graphics.off()
plot(0:10, 0:10, type = "n", asp = 1)
fern_2(c(5,0),pi/2,1.3)
fern_2 <- function(start_position,direction,length,dir =-1 ){
dir <- dir*(-1)
if (length > 0.005) {
#a = Inf
#for (i in 1:a){
turtle(start_position, direction, length)
end_position = c(start_position[1] + length * cos(direction), start_position[2] + length * sin(direction))
fern_2(end_position, direction + (dir) * pi/4, 0.38*length,-dir)
fern_2(end_position, direction , 0.87*length,dir)
#}
}
}
graphics.off()
plot(0:10, 0:10, type = "n", asp = 1)
fern_2(c(5,0),pi/2,1.3)
chaos_games()
spiral <- function(start_position, direction, length){
turtle(start_position,direction, length)
end_position = c(start_position[1] + length * cos(direction), start_position[2] + length * sin(direction))
spiral(end_position, direction - pi/4, length)
}
spiral()
spiral(c(2,1), pi/2,1)
graphics.off()
plot(0:3, 0:3, type = "n", asp = 1)
spiral_2(c(0,0.5), pi/2, 1)
graphics.off()
plot(0:2.5, 0:2.5, type = "n", asp = 1)
spiral_2(c(0,0.5), pi/2, 0.8)
graphics.off()
plot(0:2, 0:2, type = "n", asp = 1)
spiral_2(c(0,0.5), pi/2, 0.8)
graphics.off()
plot(0:4, 0:3, type = "n", asp = 1)
plot(0:4, 0:4, type = "n", asp = 1)
tree(c(2,0), pi/2,1.2)
a <- list(NA,100)
a <- rep(NA,100)
A
a
b <- list(a)
b
class(a)
class(b)
a <- 7
b <- c(a,3)
b
rm(list = ls())
graphics.off()
rm(list = ls())
graphics.off()
rm(list = ls())
graphics.off()
rm(list = ls())
graphics.off()
#17
neutral_generation_speciation <- function(community,v){
times = round(length(community)/2)
for (i in 1:times){
community = neutral_step_speciation(community,v)}
return(community)
}
neutral_step_speciation <- function(community, v){
x <- runif(1, min = 0, max =1)
if (x < v){
add_one = max(community) + 1
dead = choose_two(length(community))
die = dead[1]
community[die] = add_one
return(community)
} else{
community = neutral_step(community)
return(community)
}
}
choose_two <- function(x){
two <- sample(1:x, size = 2, replace = F)
return(two)
}
species_richness <- function(community){
species_richness <- length(unique(community))
return(species_richness)
}
species_abundance <-function(community){
species_abundance <- sort(as.numeric(table(community)), decreasing = T)
return(species_abundance)
}
octaves <- function(community){
result <- tabulate(as.integer(floor(log2(community))) + 1)
return(result)
}
initialise_min <- function(size){
minimum <- sample(1,size, replace = T)
return(minimum)
}
neutral_time_series_speciation <- function(community,v,duration){
richness =  c(species_richness(community))
for (i in 1:duration){
community = neutral_generation_speciation(community,v)
richness = c(richness, species_richness(community))
}
return(richness)
}
neutral_step <- function(community){
die_repro = choose_two(length(community))
community[die_repro[1]]=community[die_repro[2]]
return(community)
}
cluster_run <-function(species_rate, size,wall_time, interval_rich, interval_oct, burn_in_generations, output_file_name){
community = initialise_min(size)
tic = proc.time()
while(as.numeric(proc.time()-tic)[3] < (wall_time *60)){
rich = c()
oct =  list()
community_list = list()
for (i in 1:burn_in_generations){
community_list = list(community_list, neutral_generation_speciation(community, species_rate))
if (i %% interval_rich == 0){
rich = c(rich, species_richness(community[i]))
}
if (i %% interval_oct == 0){
oct = c(oct, list(octaves(community[i] )))
}
}
}
community_end = community_list[length(burn_in_generations)]
totaltime=as.numeric(proc.time()-tic)[3]
save(totaltime, oct, rich, community_end, species_rate,size,wall_time,interval_rich,interval_oct,burn_in_generations, file =output_file_name)
}
cluster_run(species_rate =0.1, size=10, wall_time = 1, interval_rich = 1, interval_oct=2, burn_in_generations=10, output_file_name = paste("my_test_file",".rda"))
load("/home/jiqiu/Documents/CMEECourseWork/HPCWeek/Code/my_test_file .rda")
iter = 1
real_size <- function(iter){
if (iter%%4 == 1){
size=500
}
if (iter%%4 == 2){
size=1000
}
if (iter%%4 == 3){
size=2500
}
if (iter%%4 == 0){
size=5000
}
return(size)
}
simulation <- function(iter){
size = real_size(iter)
interval_oct = (size) / 10
burn_in_generations = (size) * 8
cluster_run(species_rate = 0.002197, size, wall_time = 11.5*60, interval_rich = 1, interval_oct, burn_in_generations, output_file_name = paste("my_test_file_",iter,".rda"))
}
simulation <- function(iter){
size = real_size(iter)
interval_oct = (size) / 10
burn_in_generations = (size) * 8
cluster_run(species_rate = 0.002197, size, wall_time = 10, interval_rich = 1, interval_oct, burn_in_generations, output_file_name = paste("my_test_file_",iter,".rda"))
}
simulation(1)
load("/home/jiqiu/Documents/CMEECourseWork/HPCWeek/Code/my_test_file_ 1 .rda")
cluster_run <-function(species_rate, size,wall_time, interval_rich, interval_oct, burn_in_generations, output_file_name){
community = initialise_min(size)
tic = proc.time()
while(as.numeric(proc.time()-tic)[3] < (wall_time *60)){
rich = rep(NA, burn_in_generations/interval_rich)
oct =  list()
community_list = list()
for (i in 1:burn_in_generations){
community_list = list(community_list, neutral_generation_speciation(community, species_rate))
if (i %% interval_rich == 0){
rich = c(rich, species_richness(community[i]))
}
if (i %% interval_oct == 0){
oct = c(oct, list(octaves(community[i] )))
}
}
}
community_end = community_list[length(community_list)]
totaltime=as.numeric(proc.time()-tic)[3]
save(totaltime, oct, rich, community_end, species_rate,size,wall_time,interval_rich,interval_oct,burn_in_generations, file =output_file_name)
}
simulation(1)
load("/home/jiqiu/Documents/CMEECourseWork/HPCWeek/Code/my_test_file_ 1 .rda")
a <- paste("my_test_file_",iter,".rda",sep="")
a
a <- paste("my_test_file_",iter,".rda")
a
setwd("~/Documents/CMEECourseWork/HPCWeek/Results/RFiles/")
ls()
all_oct_avg <- function(){
iter = 100
all_oct_avg = c()
for (i in 1:iter){
file = paste("my_test_file_",iter,".rda",sep="")
load(file)
summa_oct = c()
for (j in 1:length(oct)){
summa_oct = sum_vect(summa_oct,oct[[j]])
}
oct_avg = summa_oct/length(oct)
all_oct_avg = c(all_oct_avg, oct_avg)
}
return(all_oct_avg)
}
all_oct_avg()
all_oct_avg <- function(){
iter = c(1:3,5:7,9:11,13:15,17:19,21:23,25:27,29:31,33:35,37:39,41:43,45:47,49:51,53:55,57:59,61:63,65:67,69:71,73:75,77:79,81:83,85:87,89:90,93:95,97:99)
all_oct_avg = c()
for (i in 1:iter){
file = paste("my_test_file_",iter,".rda",sep="")
load(file)
summa_oct = c()
for (j in 1:length(oct)){
summa_oct = sum_vect(summa_oct,oct[[j]])
}
oct_avg = summa_oct/length(oct)
all_oct_avg = c(all_oct_avg, oct_avg)
}
return(all_oct_avg)
}
all_oct_avg()
all_oct_avg <- function(){
iter = c(1:3,5:7,9:11,13:15,17:19,21:23,25:27,29:31,33:35,37:39,41:43,45:47,49:51,53:55,57:59,61:63,65:67,69:71,73:75,77:79,81:83,85:87,89:90,93:95,97:99)
all_oct_avg = c()
for (i in iter){
file = paste("my_test_file_",iter[1],".rda",sep="")
load(file)
summa_oct = c()
for (j in iter){
summa_oct = sum_vect(summa_oct,oct[[j]])
}
oct_avg = summa_oct/length(iter)
all_oct_avg = c(all_oct_avg, oct_avg)
}
return(all_oct_avg)
}
all_oct_avg()
sum_vect <- function(x,y){
if (length(x) > length(y)){
a = x
x = y
y = a
}
if(length(x) != length(y)){
gap = length(y)-length(x)
for (i in 1:gap){
x = append(x,0)}
result = x + y
} else {
result = x + y
}
}
all_oct_avg()
b <-iter = c(1:3,5:7,9:11,13:15,17:19,21:23,25:27,29:31,33:35,37:39,41:43,45:47,49:51,53:55,57:59,61:63,65:67,69:71,73:75,77:79,81:83,85:87,89:90,93:95,97:99)
b <-c(1:3,5:7,9:11,13:15,17:19,21:23,25:27,29:31,33:35,37:39,41:43,45:47,49:51,53:55,57:59,61:63,65:67,69:71,73:75,77:79,81:83,85:87,89:90,93:95,97:99)
b
all_oct_avg <- function(){
iter = c(1:3,5:7,9:11,13:15,17:19,21:23,25:27,29:31,33:35,37:39,41:43,45:47,49:51,53:55,57:59,61:63,65:67,69:71,73:75,77:79,81:83,85:87,89:90,93:95,97:99)
all_oct_avg = c()
for (i in iter){
file = paste("my_test_file_",iter[i],".rda",sep="")
load(file)
summa_oct = c()
for (j in iter){
summa_oct = sum_vect(summa_oct,oct[[j]])
}
oct_avg = summa_oct/length()
all_oct_avg = c(all_oct_avg, oct_avg)
}
return(all_oct_avg)
}
all_oct_avg()
load("/home/jiqiu/Documents/CMEECourseWork/HPCWeek/Results/RFiles/my_test_file_2.rda")
a <- c(1:25)
a
b <- ac
b <-2a
b <- 2*a
b
c <- 3*a
c
d <- c(b,c)
d
b <- 4*a -2
b
c <- 4*a -1
c
d <- c(b,c)
d
sort(d)
e <- 4*a -3
e
f <-c(d,e)
f
g <-sort(f)
g
a <- c(1:25)
b <- 4*a - 3
c <- 4*a - 2
d <- sort(c(b,c))
d
a <- c(1:25)
b <- 4*a - 3
c <- 4*a - 2
iter <- sort(c(b,c))
all_oct_avg = c()
for (i in iter){
file = paste("my_test_file_",i,".rda",sep="")
load(file)
}
iter
oct
all_oct_avg <- function(){
a <- c(1:25)
b <- 4*a - 3
c <- 4*a - 2
iter <- sort(c(b,c))
all_oct_avg = c()
for (i in iter){
file = paste("my_test_file_",i,".rda",sep="")
load(file)
summa_oct = c()
for (j in 1:length(iter)){
summa_oct = sum_vect(summa_oct,oct[[j]])
}
oct_avg = summa_oct/length(iter)
all_oct_avg = c(all_oct_avg, oct_avg)
}
return(all_oct_avg)
}
all_oct_avg()
question20 <- function(){
all_oct_avg_500 = c()
all_oct_avg_1000 = c()
for (i in (1:length(all_oct_avg))){
if(i%%2==1){
all_oct_all_500 = sum_vect(all_oct_all_500,all_oct_avg[[i]])
}
else if(i%%2==0){
all_oct_all_1000 = sum_vect(all_oct_all_1000, all_oct_avg[[i]])
}
}
all_oct_avg_500 = all_oct_all_500/25
all_oct_avg_1000 = all_oct_all_1000/25
pdf(file="../Results/Figures/Question20.pdf")
par(mfrow = c(1,2),oma=c(0,0,2,0))
barplot(all_oct_avg_500, names.arg = c(2^((1:all_oct_avg_500))-1),
main = "Community size = 500",
xlab = "The Abundance Range", ylab = "The Number Of Species")
barplot(all_oct_avg_1000, names.arg = c(2^((1:length(all_oct_avg_1000))-1)),
main = "Community size = 1000",
xlab = "The Abundance Range", ylab = "The Number Of Species")
barplot(all_oct_avg_2500, names.arg = c(2^((1:length(all_oct_avg_2500))-1)),
main = "Community size = 2500",
xlab = "The Abundance Range", ylab = "The Number Of Species")
barplot(all_oct_avg_5000, names.arg = c(2^((1:length(all_oct_avg_5000))-1)),
main = "Community size = 5000",
xlab = "The Abundance Range", ylab = "The Number Of Species")
title("The Average Of The Species Abundance Distribution", outer=TRUE)
dev.off()
}
question20()
question20 <- function(){
all_oct_all_500 = c()
all_oct_all_1000 = c()
for (i in (1:length(all_oct_avg))){
if(i%%2==1){
all_oct_all_500 = sum_vect(all_oct_all_500,all_oct_avg[[i]])
}
else if(i%%2==0){
all_oct_all_1000 = sum_vect(all_oct_all_1000, all_oct_avg[[i]])
}
}
all_oct_avg_500 = all_oct_all_500/25
all_oct_avg_1000 = all_oct_all_1000/25
pdf(file="../Results/Figures/Question20.pdf")
par(mfrow = c(1,2),oma=c(0,0,2,0))
barplot(all_oct_avg_500, names.arg = c(2^((1:all_oct_avg_500))-1),
main = "Community size = 500",
xlab = "The Abundance Range", ylab = "The Number Of Species")
barplot(all_oct_avg_1000, names.arg = c(2^((1:length(all_oct_avg_1000))-1)),
main = "Community size = 1000",
xlab = "The Abundance Range", ylab = "The Number Of Species")
barplot(all_oct_avg_2500, names.arg = c(2^((1:length(all_oct_avg_2500))-1)),
main = "Community size = 2500",
xlab = "The Abundance Range", ylab = "The Number Of Species")
barplot(all_oct_avg_5000, names.arg = c(2^((1:length(all_oct_avg_5000))-1)),
main = "Community size = 5000",
xlab = "The Abundance Range", ylab = "The Number Of Species")
title("The Average Of The Species Abundance Distribution", outer=TRUE)
dev.off()
}
question20()
question20 <- function(){
all_oct_all_500 = c()
all_oct_all_1000 = c()
for (i in (1:length(all_oct_avg))){
if(i%%2==1){
all_oct_all_500 = sum_vect(all_oct_all_500,all_oct_avg[i])
}
else if(i%%2==0){
all_oct_all_1000 = sum_vect(all_oct_all_1000, all_oct_avg[i])
}
}
all_oct_avg_500 = all_oct_all_500/25
all_oct_avg_1000 = all_oct_all_1000/25
pdf(file="../Results/Figures/Question20.pdf")
par(mfrow = c(1,2),oma=c(0,0,2,0))
barplot(all_oct_avg_500, names.arg = c(2^((1:all_oct_avg_500))-1),
main = "Community size = 500",
xlab = "The Abundance Range", ylab = "The Number Of Species")
barplot(all_oct_avg_1000, names.arg = c(2^((1:length(all_oct_avg_1000))-1)),
main = "Community size = 1000",
xlab = "The Abundance Range", ylab = "The Number Of Species")
title("The Average Of The Species Abundance Distribution", outer=TRUE)
dev.off()
}
question20()
question_20 <- function(){
all_iter_averoct=oct_multi_graph(iter)
size500_sum_oct=c(0)
size1000_sum_oct=c(0)
for (i in (1:length(all_iter_averoct))){
if(i%%2==1){
size500_sum_oct = sum_vect(size500_sum_oct,all_iter_averoct[[i]])
}
else if(i%%2==0){
size1000_sum_oct = sum_vect(size1000_sum_oct,all_iter_averoct[[i]])
}
}
size500_aver_oct=size500_sum_oct/(length(all_iter_averoct)/4)
size1000_aver_oct=size1000_sum_oct/(length(all_iter_averoct)/4)
pdf(file="../results/Question20.pdf")
par(mfrow = c(2,2),oma=c(0,0,2,0))
barplot(size500_aver_oct, names.arg = c(2^((1:length(size500_aver_oct))-1)),
main = "Community size = 500",
xlab = "Number of Individuals per Species", ylab = "Number of Species", col = "darkblue")
barplot(size1000_aver_oct, names.arg = c(2^((1:length(size1000_aver_oct))-1)),
main = "Community size = 1000",
xlab = "Number of Individuals per Species", ylab = "Number of Species", col = "red")
title("Average Species Abundance Distribution", outer=TRUE)
dev.off()
}
question20()
all_oct_avg <- function(){
a <- c(1:25)
b <- 4*a - 3
c <- 4*a - 2
iter <- sort(c(b,c))
all_oct_avg = c()
for (i in iter){
file = paste("my_test_file_",i,".rda",sep="")
load(file)
summa_oct = c(0)
for (j in 1:length(oct)){
summa_oct = sum_vect(summa_oct,oct[[j]])
}
oct_avg = summa_oct/length(oct)
all_oct_avg = c(all_oct_avg, list(oct_avg))
}
return(all_oct_avg)
}
all_oct_avg()
question20 <- function(){
all_oct_all_500 = c()
all_oct_all_1000 = c()
for (i in (1:length(all_oct_avg))){
if(i%%2==1){
all_oct_all_500 = sum_vect(all_oct_all_500,all_oct_avg[i])
}
else if(i%%2==0){
all_oct_all_1000 = sum_vect(all_oct_all_1000, all_oct_avg[i])
}
}
all_oct_avg_500 = all_oct_all_500/25
all_oct_avg_1000 = all_oct_all_1000/25
pdf(file="../Results/Figures/Question20.pdf")
par(mfrow = c(1,2),oma=c(0,0,2,0))
barplot(all_oct_avg_500, names.arg = c(2^((1:all_oct_avg_500))-1),
main = "Community size = 500",
xlab = "The Abundance Range", ylab = "The Number Of Species")
barplot(all_oct_avg_1000, names.arg = c(2^((1:length(all_oct_avg_1000))-1)),
main = "Community size = 1000",
xlab = "The Abundance Range", ylab = "The Number Of Species")
title("The Average Of The Species Abundance Distribution", outer=TRUE)
dev.off()
}
question20()
load("/home/jiqiu/Documents/CMEECourseWork/HPCWeek/Results/RFiles/my_test_file_3.rda")
oct
